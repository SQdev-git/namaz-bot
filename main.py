import telebot
import function as func
from config import *
from keyboard import *
import urllib

bot = telebot.TeleBot(API_KEY)

@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ —è –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è –Ω–∞–º–∞–∑–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –º–µ—Å—Ç–µ\n –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è –º–æ–ª–∏—Ç–≤—ã –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞')
    bot.register_next_step_handler(message, get_country)
    
    
@bot.message_handler(content_types="text")
def get_country(message):
    try:
        for num in range(1,5):
            bot.delete_message(message.chat.id, message.message_id-num)
    except Exception as e:
        pass
    if message.text:
        checker = func.get_dic_country(message.text.lower())
        if not (func.get_dic_country(message.text.lower())) is False:
            bot.send_message(message.chat.id, '\tüòä –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ –Ω–∞–π–¥–µ–Ω–æ.\n ‚è¨–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏‚è¨', reply_markup= generate_key('reg', func.get_api_reg(checker[1])))
        elif checker is False:
            bot.send_message(message.chat.id, 'ü§∑üèª‚Äç‚ôÇÔ∏è –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–∏—à–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.')
            bot.register_next_step_handler(message, get_country)
@bot.callback_query_handler(func=lambda c:True)
def main(c):
    datas = c.data.split("()")
    if len(datas)>1:
        if datas[0]=='reg':
            bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id,text= '–®–∞“≥—Ä–∏ –¥–∞—Ä –∏–Ω –≤–∏–ª–æ—è—Ç–±—É–¥–∞—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥', reply_markup=generate_key('city', func.get_api_city(datas[1])))
        elif datas[0]=='city':
            bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id, text= '–ò–Ω—Ç–∏–∑–æ—Ä —à–∞–≤–µ–¥...')
            bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id, text=func.get_api_time(datas[1]))
    elif c.data=='exit':
        bot.delete_message(c.message.chat.id, c.message.message_id)
        try:
            for num in range(1, 5):
                bot.delete_message(c.message.chat.id, c.message.message_id-num)
        except:
            pass

    


bot.polling(none_stop=False)